unit unDataModule;

interface

uses
  System.SysUtils, System.Classes, Data.DB, Data.Win.ADODB, Vcl.Dialogs;

type
  Tfrm_DataModule = class(TDataModule)
    Conexao: TADOConnection;
    qryAuxiliar: TADOQuery;
    procedure DataModuleCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    conectado : boolean;
  end;

var
  frm_DataModule: Tfrm_DataModule;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

{ Tfrm_DataModule }

procedure Tfrm_DataModule.DataModuleCreate(Sender: TObject);
var
  servidor, database: string;
begin
  servidor := '';
  database := '';
  conectado := false;

  //Se não der valida, clicar em cancelar ou fechar é false
  if not InputQuery('Informe', 'Nome do servidor:', servidor) then
    abort;
  if not InputQuery('Informe', 'Nome do banco:', database) then
    abort;

  if (servidor = '') or (database = '') then
  begin
    ShowMessage('É necessario informar o servidor e o banco de dados.');
    abort;
  end;


  servidor := 'LAPTOP-0E5LQAT5';
  database := 'dbFluxoDeCaixa';
  Conexao.Connected := false;
  Conexao.ConnectionString := Conexao.ConnectionString +
    ';datasource=' + servidor +
    ';initial catalog=' + database;

  try
    Conexao.Connected := True;
    conectado := true;
  except
    on e: Exception do begin
      ShowMessage('Erro ao conectar:' + #13 + e.Message);
    end;
  end;

  if not conectado = false then
  begin
    showMessage('Não conectado');
  end;
end;

end.
